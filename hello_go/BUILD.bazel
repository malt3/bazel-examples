load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@bazel-zig-cc//rules:platform.bzl", "platform_binary")

go_binary(
    name = "hello_go",
    embed = [":hello_go_lib"],
    visibility = ["//visibility:public"],
)

go_library(
    name = "hello_go_lib",
    srcs = ["hello.go"],
    importpath = "github.com/malt3/bazel-examples/hello_go",
    visibility = ["//visibility:private"],
)

# create matrix builds for all platforms
[
    platform_binary(
        name = "hello_{}".format(name),
        src = "hello_go",
        platform = platform,
        visibility = ["//visibility:public"],
    )
    for name, platform in [
        ("linux_amd64_musl", "//libc_aware/platform:linux_amd64_musl"),
        ("linux_amd64_gnu.2.34", "//libc_aware/platform:linux_amd64_gnu.2.34"),
        ("linux_arm64_musl", "//libc_aware/platform:linux_arm64_musl"),
        ("linux_arm64_gnu.2.34", "//libc_aware/platform:linux_arm64_gnu.2.34"),
        ("darwin_amd64", "//platform:darwin_amd64"),
        ("darwin_arm64", "//platform:darwin_arm64"),
    ]
]
